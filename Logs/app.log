2024-06-17 05:34:43.153 INFO  logPackage.LogReader [main] - Method Declaration: int getMouseEventID()
2024-06-17 05:34:43.156 INFO  logPackage.LogReader [main] - Method Content: {
    return mouseEventID;
}
2024-06-17 05:34:43.198 DEBUG logPackage.LogReader [main] - Logger Variable Declaration: log
2024-06-17 05:34:43.198 INFO  logPackage.LogReader [main] - Method Declaration: void launch(GhidraApplicationLayout, String[])
2024-06-17 05:34:43.206 INFO  logPackage.LogReader [main] - Method Content: {
    Runnable mainTask = () -> {
        GhidraApplicationConfiguration configuration = new GhidraApplicationConfiguration();
        Application.initializeApplication(layout, configuration);
        log = LogManager.getLogger(GhidraRun.class);
        log.info("User " + SystemUtilities.getUserName() + " started Ghidra.");
        log.info("User settings directory: " + Application.getUserSettingsDirectory());
        log.info("User temp directory: " + Application.getUserTempDirectory());
        log.info("User cache directory: " + Application.getUserCacheDirectory());
        initializeTooltips();
        updateSplashScreenStatusMessage("Populating Ghidra help...");
        GhidraHelpService.install();
        ExtensionUtils.initializeExtensions();
        updateSplashScreenStatusMessage("Checking for previous project...");
        SystemUtilities.runSwingLater(() -> {
            String projectPath = processArguments(args);
            openProject(projectPath);
        });
    };
    // Start main thread in GhidraThreadGroup
    Thread mainThread = new Thread(new GhidraThreadGroup(), mainTask, "Ghidra");
    mainThread.start();
}
2024-06-17 05:34:43.208 TRACE logPackage.LogReader [main] - Method Call inside Method: Application.initializeApplication(layout, configuration)
2024-06-17 05:34:43.250 ERROR logPackage.LogReader [main] - Error resolving argument type for: layout
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : GhidraApplicationLayout
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.262 ERROR logPackage.LogReader [main] - Error resolving argument type for: configuration
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : GhidraApplicationConfiguration
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclaration.getType(JavaParserVariableDeclaration.java:59) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.264 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.264 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.265 TRACE logPackage.LogReader [main] - Method Call inside Method: LogManager.getLogger(GhidraRun.class)
2024-06-17 05:34:43.275 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.Class<ghidra.GhidraRun>]
2024-06-17 05:34:43.276 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.276 TRACE logPackage.LogReader [main] - Method Call inside Method: log.info("User " + SystemUtilities.getUserName() + " started Ghidra.")
2024-06-17 05:34:43.283 ERROR logPackage.LogReader [main] - Error resolving argument type for: "User " + SystemUtilities.getUserName() + " started Ghidra."
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol in SystemUtilities : Solving SystemUtilities
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:336) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.285 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.285 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.285 TRACE logPackage.LogReader [main] - Method Call inside Method: SystemUtilities.getUserName()
2024-06-17 05:34:43.285 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.285 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.286 TRACE logPackage.LogReader [main] - Method Call inside Method: log.info("User settings directory: " + Application.getUserSettingsDirectory())
2024-06-17 05:34:43.287 ERROR logPackage.LogReader [main] - Error resolving argument type for: "User settings directory: " + Application.getUserSettingsDirectory()
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol in Application : Solving Application
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:336) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.289 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.289 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.289 TRACE logPackage.LogReader [main] - Method Call inside Method: Application.getUserSettingsDirectory()
2024-06-17 05:34:43.289 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.289 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.289 TRACE logPackage.LogReader [main] - Method Call inside Method: log.info("User temp directory: " + Application.getUserTempDirectory())
2024-06-17 05:34:43.292 ERROR logPackage.LogReader [main] - Error resolving argument type for: "User temp directory: " + Application.getUserTempDirectory()
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol in Application : Solving Application
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:336) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.293 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.294 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.294 TRACE logPackage.LogReader [main] - Method Call inside Method: Application.getUserTempDirectory()
2024-06-17 05:34:43.294 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.294 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.294 TRACE logPackage.LogReader [main] - Method Call inside Method: log.info("User cache directory: " + Application.getUserCacheDirectory())
2024-06-17 05:34:43.297 ERROR logPackage.LogReader [main] - Error resolving argument type for: "User cache directory: " + Application.getUserCacheDirectory()
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol in Application : Solving Application
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:336) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Method Call inside Method: Application.getUserCacheDirectory()
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Method Call inside Method: initializeTooltips()
2024-06-17 05:34:43.298 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Method Call inside Method: updateSplashScreenStatusMessage("Populating Ghidra help...")
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Method Call inside Method: GhidraHelpService.install()
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Method Call inside Method: ExtensionUtils.initializeExtensions()
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Method Call inside Method: updateSplashScreenStatusMessage("Checking for previous project...")
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.299 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.300 TRACE logPackage.LogReader [main] - Method Call inside Method: SystemUtilities.runSwingLater(() -> {
    String projectPath = processArguments(args);
    openProject(projectPath);
})
2024-06-17 05:34:43.300 TRACE logPackage.LogReader [main] - Unique argument types: [Lambda]
2024-06-17 05:34:43.300 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.300 TRACE logPackage.LogReader [main] - Method Call inside Method: processArguments(args)
2024-06-17 05:34:43.302 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String[]]
2024-06-17 05:34:43.302 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.302 TRACE logPackage.LogReader [main] - Method Call inside Method: openProject(projectPath)
2024-06-17 05:34:43.303 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.303 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.303 TRACE logPackage.LogReader [main] - Method Call inside Method: mainThread.start()
2024-06-17 05:34:43.303 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.303 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.305 DEBUG logPackage.LogReader [main] - Logger Variable Declaration: mainTask
2024-06-17 05:34:43.306 TRACE logPackage.LogReader [main] - Method Call: Application.initializeApplication(layout, configuration)
2024-06-17 05:34:43.306 TRACE logPackage.LogReader [main] - Method Call: LogManager.getLogger(GhidraRun.class)
2024-06-17 05:34:43.306 TRACE logPackage.LogReader [main] - Method Call: log.info("User " + SystemUtilities.getUserName() + " started Ghidra.")
2024-06-17 05:34:43.307 TRACE logPackage.LogReader [main] - Method Call: SystemUtilities.getUserName()
2024-06-17 05:34:43.307 TRACE logPackage.LogReader [main] - Method Call: log.info("User settings directory: " + Application.getUserSettingsDirectory())
2024-06-17 05:34:43.308 TRACE logPackage.LogReader [main] - Method Call: Application.getUserSettingsDirectory()
2024-06-17 05:34:43.308 TRACE logPackage.LogReader [main] - Method Call: log.info("User temp directory: " + Application.getUserTempDirectory())
2024-06-17 05:34:43.308 TRACE logPackage.LogReader [main] - Method Call: Application.getUserTempDirectory()
2024-06-17 05:34:43.308 TRACE logPackage.LogReader [main] - Method Call: log.info("User cache directory: " + Application.getUserCacheDirectory())
2024-06-17 05:34:43.309 TRACE logPackage.LogReader [main] - Method Call: Application.getUserCacheDirectory()
2024-06-17 05:34:43.309 TRACE logPackage.LogReader [main] - Method Call: initializeTooltips()
2024-06-17 05:34:43.309 TRACE logPackage.LogReader [main] - Method Call: updateSplashScreenStatusMessage("Populating Ghidra help...")
2024-06-17 05:34:43.309 TRACE logPackage.LogReader [main] - Method Call: GhidraHelpService.install()
2024-06-17 05:34:43.309 TRACE logPackage.LogReader [main] - Method Call: ExtensionUtils.initializeExtensions()
2024-06-17 05:34:43.309 TRACE logPackage.LogReader [main] - Method Call: updateSplashScreenStatusMessage("Checking for previous project...")
2024-06-17 05:34:43.310 TRACE logPackage.LogReader [main] - Method Call: SystemUtilities.runSwingLater(() -> {
    String projectPath = processArguments(args);
    openProject(projectPath);
})
2024-06-17 05:34:43.310 TRACE logPackage.LogReader [main] - Method Call: processArguments(args)
2024-06-17 05:34:43.310 TRACE logPackage.LogReader [main] - Method Call: openProject(projectPath)
2024-06-17 05:34:43.310 TRACE logPackage.LogReader [main] - Method Call: mainThread.start()
2024-06-17 05:34:43.311 INFO  logPackage.LogReader [main] - Method Declaration: String processArguments(String[])
2024-06-17 05:34:43.312 INFO  logPackage.LogReader [main] - Method Content: {
    //TODO remove this special handling when possible
    if (args.length == 1 && (args[0].startsWith("-D") || args[0].indexOf(" -D") >= 0)) {
        args = args[0].split(" ");
    }
    String projectPath = null;
    for (String arg : args) {
        if (arg.startsWith("-D")) {
            String[] split = arg.substring(2).split("=");
            if (split.length == 2) {
                System.setProperty(split[0], split[1]);
            }
        } else {
            projectPath = arg;
        }
    }
    return projectPath;
}
2024-06-17 05:34:43.313 TRACE logPackage.LogReader [main] - Method Call inside Method: args[0].startsWith("-D")
2024-06-17 05:34:43.313 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.313 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.313 TRACE logPackage.LogReader [main] - Method Call inside Method: args[0].indexOf(" -D")
2024-06-17 05:34:43.313 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.313 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.314 TRACE logPackage.LogReader [main] - Method Call inside Method: args[0].split(" ")
2024-06-17 05:34:43.314 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.314 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.314 TRACE logPackage.LogReader [main] - Method Call inside Method: arg.startsWith("-D")
2024-06-17 05:34:43.314 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.314 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.315 TRACE logPackage.LogReader [main] - Method Call inside Method: arg.substring(2).split("=")
2024-06-17 05:34:43.315 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.315 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.315 TRACE logPackage.LogReader [main] - Method Call inside Method: arg.substring(2)
2024-06-17 05:34:43.317 TRACE logPackage.LogReader [main] - Unique argument types: [int]
2024-06-17 05:34:43.318 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.318 TRACE logPackage.LogReader [main] - Method Call inside Method: System.setProperty(split[0], split[1])
2024-06-17 05:34:43.320 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.320 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.320 TRACE logPackage.LogReader [main] - Method Call: args[0].startsWith("-D")
2024-06-17 05:34:43.321 TRACE logPackage.LogReader [main] - Method Call: args[0].indexOf(" -D")
2024-06-17 05:34:43.321 TRACE logPackage.LogReader [main] - Method Call: args[0].split(" ")
2024-06-17 05:34:43.321 TRACE logPackage.LogReader [main] - Method Call: arg.startsWith("-D")
2024-06-17 05:34:43.321 TRACE logPackage.LogReader [main] - Method Call: arg.substring(2).split("=")
2024-06-17 05:34:43.321 TRACE logPackage.LogReader [main] - Method Call: arg.substring(2)
2024-06-17 05:34:43.322 TRACE logPackage.LogReader [main] - Method Call: System.setProperty(split[0], split[1])
2024-06-17 05:34:43.322 INFO  logPackage.LogReader [main] - Method Declaration: void updateSplashScreenStatusMessage(String)
2024-06-17 05:34:43.322 INFO  logPackage.LogReader [main] - Method Content: {
    SystemUtilities.runSwingNow(() -> SplashScreen.updateSplashScreenStatus(message));
}
2024-06-17 05:34:43.322 TRACE logPackage.LogReader [main] - Method Call inside Method: SystemUtilities.runSwingNow(() -> SplashScreen.updateSplashScreenStatus(message))
2024-06-17 05:34:43.322 TRACE logPackage.LogReader [main] - Unique argument types: [Lambda]
2024-06-17 05:34:43.322 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.322 TRACE logPackage.LogReader [main] - Method Call inside Method: SplashScreen.updateSplashScreenStatus(message)
2024-06-17 05:34:43.323 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.323 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.323 TRACE logPackage.LogReader [main] - Method Call: SystemUtilities.runSwingNow(() -> SplashScreen.updateSplashScreenStatus(message))
2024-06-17 05:34:43.324 TRACE logPackage.LogReader [main] - Method Call: SplashScreen.updateSplashScreenStatus(message)
2024-06-17 05:34:43.324 INFO  logPackage.LogReader [main] - Method Declaration: void initializeTooltips()
2024-06-17 05:34:43.324 INFO  logPackage.LogReader [main] - Method Content: {
    int currentDelay = ToolTipManager.sharedInstance().getDismissDelay();
    ToolTipManager.sharedInstance().setDismissDelay(currentDelay * 2);
}
2024-06-17 05:34:43.324 TRACE logPackage.LogReader [main] - Method Call inside Method: ToolTipManager.sharedInstance().getDismissDelay()
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Method Call inside Method: ToolTipManager.sharedInstance()
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Method Call inside Method: ToolTipManager.sharedInstance().setDismissDelay(currentDelay * 2)
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Unique argument types: [int]
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Method Call inside Method: ToolTipManager.sharedInstance()
2024-06-17 05:34:43.325 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.326 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.326 TRACE logPackage.LogReader [main] - Method Call: ToolTipManager.sharedInstance().getDismissDelay()
2024-06-17 05:34:43.326 TRACE logPackage.LogReader [main] - Method Call: ToolTipManager.sharedInstance()
2024-06-17 05:34:43.326 TRACE logPackage.LogReader [main] - Method Call: ToolTipManager.sharedInstance().setDismissDelay(currentDelay * 2)
2024-06-17 05:34:43.326 TRACE logPackage.LogReader [main] - Method Call: ToolTipManager.sharedInstance()
2024-06-17 05:34:43.326 INFO  logPackage.LogReader [main] - Method Declaration: void openProject(String)
2024-06-17 05:34:43.328 INFO  logPackage.LogReader [main] - Method Content: {
    updateSplashScreenStatusMessage("Creating project manager...");
    ProjectManager pm = new GhidraProjectManager();
    updateSplashScreenStatusMessage("Creating front end tool...");
    // Show this warning before creating the tool.   If we create the tool first, then we may
    // see odd dialog behavior caused tool plugins creating dialogs during initialization.
    if (Application.isTestBuild()) {
        Msg.showWarn(GhidraRun.class, null, "Unsupported Ghidra Distribution", "WARNING! Please be aware that this is an unsupported and uncertified\n" + "build of Ghidra!  This software may be unstable and data created\n" + "may be incompatible with future releases.");
    }
    FrontEndTool tool = new FrontEndTool(pm);
    boolean reopen = true;
    ProjectLocator projectLocator = null;
    if (projectPath != null) {
        File projectFile = new File(projectPath);
        String name = projectFile.getName();
        if (!name.endsWith(ProjectLocator.getProjectExtension())) {
            Msg.showInfo(GhidraRun.class, null, "Invalid Project", "The specified file is not a project file: " + projectPath);
        } else {
            projectLocator = new ProjectLocator(projectFile.getParent(), name);
            reopen = false;
        }
    }
    if (projectLocator == null && tool.shouldRestorePreviousProject()) {
        updateSplashScreenStatusMessage("Checking for last opened project...");
        projectLocator = pm.getLastOpenedProject();
    }
    tool.setVisible(true);
    if (projectLocator != null) {
        openProject(tool, projectLocator, reopen);
    }
}
2024-06-17 05:34:43.328 TRACE logPackage.LogReader [main] - Method Call inside Method: updateSplashScreenStatusMessage("Creating project manager...")
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Method Call inside Method: updateSplashScreenStatusMessage("Creating front end tool...")
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Method Call inside Method: Application.isTestBuild()
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.329 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showWarn(GhidraRun.class, null, "Unsupported Ghidra Distribution", "WARNING! Please be aware that this is an unsupported and uncertified\n" + "build of Ghidra!  This software may be unstable and data created\n" + "may be incompatible with future releases.")
2024-06-17 05:34:43.330 TRACE logPackage.LogReader [main] - Unique argument types: [null, java.lang.Class<ghidra.GhidraRun>, java.lang.String]
2024-06-17 05:34:43.330 TRACE logPackage.LogReader [main] - Number of unique argument types: 3
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Method Call inside Method: projectFile.getName()
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Method Call inside Method: name.endsWith(ProjectLocator.getProjectExtension())
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Unique argument types: [MethodCall]
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Method Call inside Method: ProjectLocator.getProjectExtension()
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Method Call inside Method: projectFile.getParent()
2024-06-17 05:34:43.331 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.332 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.332 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showInfo(GhidraRun.class, null, "Invalid Project", "The specified file is not a project file: " + projectPath)
2024-06-17 05:34:43.333 TRACE logPackage.LogReader [main] - Unique argument types: [null, java.lang.Class<ghidra.GhidraRun>, java.lang.String]
2024-06-17 05:34:43.333 TRACE logPackage.LogReader [main] - Number of unique argument types: 3
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Method Call inside Method: tool.shouldRestorePreviousProject()
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Method Call inside Method: updateSplashScreenStatusMessage("Checking for last opened project...")
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Method Call inside Method: pm.getLastOpenedProject()
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.334 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.335 TRACE logPackage.LogReader [main] - Method Call inside Method: tool.setVisible(true)
2024-06-17 05:34:43.335 TRACE logPackage.LogReader [main] - Unique argument types: [boolean]
2024-06-17 05:34:43.335 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.335 TRACE logPackage.LogReader [main] - Method Call inside Method: openProject(tool, projectLocator, reopen)
2024-06-17 05:34:43.336 ERROR logPackage.LogReader [main] - Error resolving argument type for: tool
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : FrontEndTool
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclaration.getType(JavaParserVariableDeclaration.java:59) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:301) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.339 ERROR logPackage.LogReader [main] - Error resolving argument type for: projectLocator
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclaration.getType(JavaParserVariableDeclaration.java:59) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:301) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.342 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, boolean]
2024-06-17 05:34:43.342 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.343 TRACE logPackage.LogReader [main] - Method Call: updateSplashScreenStatusMessage("Creating project manager...")
2024-06-17 05:34:43.343 TRACE logPackage.LogReader [main] - Method Call: updateSplashScreenStatusMessage("Creating front end tool...")
2024-06-17 05:34:43.343 TRACE logPackage.LogReader [main] - Method Call: Application.isTestBuild()
2024-06-17 05:34:43.343 TRACE logPackage.LogReader [main] - Method Call: Msg.showWarn(GhidraRun.class, null, "Unsupported Ghidra Distribution", "WARNING! Please be aware that this is an unsupported and uncertified\n" + "build of Ghidra!  This software may be unstable and data created\n" + "may be incompatible with future releases.")
2024-06-17 05:34:43.343 TRACE logPackage.LogReader [main] - Method Call: projectFile.getName()
2024-06-17 05:34:43.344 TRACE logPackage.LogReader [main] - Method Call: name.endsWith(ProjectLocator.getProjectExtension())
2024-06-17 05:34:43.344 TRACE logPackage.LogReader [main] - Method Call: ProjectLocator.getProjectExtension()
2024-06-17 05:34:43.344 TRACE logPackage.LogReader [main] - Method Call: projectFile.getParent()
2024-06-17 05:34:43.344 TRACE logPackage.LogReader [main] - Method Call: Msg.showInfo(GhidraRun.class, null, "Invalid Project", "The specified file is not a project file: " + projectPath)
2024-06-17 05:34:43.344 TRACE logPackage.LogReader [main] - Method Call: tool.shouldRestorePreviousProject()
2024-06-17 05:34:43.344 TRACE logPackage.LogReader [main] - Method Call: updateSplashScreenStatusMessage("Checking for last opened project...")
2024-06-17 05:34:43.345 TRACE logPackage.LogReader [main] - Method Call: pm.getLastOpenedProject()
2024-06-17 05:34:43.345 TRACE logPackage.LogReader [main] - Method Call: tool.setVisible(true)
2024-06-17 05:34:43.345 TRACE logPackage.LogReader [main] - Method Call: openProject(tool, projectLocator, reopen)
2024-06-17 05:34:43.345 INFO  logPackage.LogReader [main] - Method Declaration: void openProject(FrontEndTool, ProjectLocator, boolean)
2024-06-17 05:34:43.346 INFO  logPackage.LogReader [main] - Method Content: {
    SplashScreen.updateSplashScreenStatus((reopen ? "Reopening" : "Opening") + " project: " + projectLocator.getName());
    Runnable r = () -> doOpenProject(tool, projectLocator, reopen);
    TaskLauncher.launchModal("Opening Project", () -> Swing.runNow(r));
}
2024-06-17 05:34:43.346 TRACE logPackage.LogReader [main] - Method Call inside Method: SplashScreen.updateSplashScreenStatus((reopen ? "Reopening" : "Opening") + " project: " + projectLocator.getName())
2024-06-17 05:34:43.352 ERROR logPackage.LogReader [main] - Error resolving argument type for: (reopen ? "Reopening" : "Opening") + " project: " + projectLocator.getName()
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.353 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.353 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.353 TRACE logPackage.LogReader [main] - Method Call inside Method: projectLocator.getName()
2024-06-17 05:34:43.353 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.353 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.353 TRACE logPackage.LogReader [main] - Method Call inside Method: doOpenProject(tool, projectLocator, reopen)
2024-06-17 05:34:43.355 ERROR logPackage.LogReader [main] - Error resolving argument type for: tool
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : FrontEndTool
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.358 ERROR logPackage.LogReader [main] - Error resolving argument type for: projectLocator
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:610) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.LambdaExpr.accept(LambdaExpr.java:170) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.359 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, boolean]
2024-06-17 05:34:43.359 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.360 TRACE logPackage.LogReader [main] - Method Call inside Method: TaskLauncher.launchModal("Opening Project", () -> Swing.runNow(r))
2024-06-17 05:34:43.360 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String, Lambda]
2024-06-17 05:34:43.360 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.360 TRACE logPackage.LogReader [main] - Method Call inside Method: Swing.runNow(r)
2024-06-17 05:34:43.362 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.Runnable]
2024-06-17 05:34:43.362 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.362 TRACE logPackage.LogReader [main] - Method Call: SplashScreen.updateSplashScreenStatus((reopen ? "Reopening" : "Opening") + " project: " + projectLocator.getName())
2024-06-17 05:34:43.362 TRACE logPackage.LogReader [main] - Method Call: projectLocator.getName()
2024-06-17 05:34:43.363 TRACE logPackage.LogReader [main] - Method Call: doOpenProject(tool, projectLocator, reopen)
2024-06-17 05:34:43.363 TRACE logPackage.LogReader [main] - Method Call: TaskLauncher.launchModal("Opening Project", () -> Swing.runNow(r))
2024-06-17 05:34:43.363 TRACE logPackage.LogReader [main] - Method Call: Swing.runNow(r)
2024-06-17 05:34:43.363 INFO  logPackage.LogReader [main] - Method Declaration: void doOpenProject(FrontEndTool, ProjectLocator, boolean)
2024-06-17 05:34:43.364 INFO  logPackage.LogReader [main] - Method Content: {
    try {
        ProjectManager pm = tool.getProjectManager();
        Project activeProject = pm.openProject(projectLocator, true, false);
        if (activeProject == null) {
            return;
        }
        tool.setActiveProject(activeProject);
        RepositoryAdapter repository = activeProject.getRepository();
        if (repository != null && !repository.isConnected()) {
            Msg.showInfo(GhidraRun.class, null, "Working Off-Line ", "Even though you are not connected to the Ghidra Server,\n" + "you can still work off-line on checked out files or private files.\n" + "You can also try reconnecting to the server by selecting the connect\n" + "button on the Ghidra Project Window.\n \n" + "See the Ghidra Help topic 'Project Repository' for troubleshooting\n" + "a failed connection.");
        }
    } catch (Throwable t) {
        if (t instanceof UsrException) {
            if (t instanceof LockException) {
                Msg.showInfo(GhidraRun.class, null, "Project is Locked", "Can't open project: " + projectLocator.toString() + "\nProject is already locked");
            } else {
                Msg.showInfo(GhidraRun.class, null, "Project Open Failed", "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage());
            }
        } else {
            Msg.showError(GhidraRun.class, null, "Project Open Failed", "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage(), t);
        }
        tool.setActiveProject(null);
    }
}
2024-06-17 05:34:43.364 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showError(GhidraRun.class, null, "Project Open Failed", "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage(), t)
2024-06-17 05:34:43.368 ERROR logPackage.LogReader [main] - Error resolving argument type for: "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage()
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$88(VoidVisitorAdapter.java:300) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:300) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:133) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.CatchClause.accept(CatchClause.java:84) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$162(VoidVisitorAdapter.java:532) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:532) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.TryStmt.accept(TryStmt.java:143) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.369 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, java.lang.Throwable, null, java.lang.Class<ghidra.GhidraRun>, java.lang.String]
2024-06-17 05:34:43.369 TRACE logPackage.LogReader [main] - Number of unique argument types: 5
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Method Call inside Method: projectLocator.toString()
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getClass().getSimpleName()
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getClass()
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getMessage()
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.370 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showInfo(GhidraRun.class, null, "Project Open Failed", "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage())
2024-06-17 05:34:43.373 ERROR logPackage.LogReader [main] - Error resolving argument type for: "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage()
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$88(VoidVisitorAdapter.java:300) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:300) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:301) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:133) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.CatchClause.accept(CatchClause.java:84) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$162(VoidVisitorAdapter.java:532) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:532) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.TryStmt.accept(TryStmt.java:143) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.374 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, null, java.lang.Class<ghidra.GhidraRun>, java.lang.String]
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Number of unique argument types: 4
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Method Call inside Method: projectLocator.toString()
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getClass().getSimpleName()
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getClass()
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.375 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.376 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getMessage()
2024-06-17 05:34:43.376 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.376 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.376 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showInfo(GhidraRun.class, null, "Project is Locked", "Can't open project: " + projectLocator.toString() + "\nProject is already locked")
2024-06-17 05:34:43.378 ERROR logPackage.LogReader [main] - Error resolving argument type for: "Can't open project: " + projectLocator.toString() + "\nProject is already locked"
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveMethodAsUsage(MethodCallExprContext.java:102) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.solveMethodAsUsage(JavaParserFacade.java:656) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:324) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:118) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:451) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getBinaryTypeConcrete(JavaParserFacade.java:450) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:140) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.BinaryExpr.accept(BinaryExpr.java:142) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:301) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:301) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:133) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.CatchClause.accept(CatchClause.java:84) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$162(VoidVisitorAdapter.java:532) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:532) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.TryStmt.accept(TryStmt.java:143) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.378 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, null, java.lang.Class<ghidra.GhidraRun>, java.lang.String]
2024-06-17 05:34:43.378 TRACE logPackage.LogReader [main] - Number of unique argument types: 4
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Method Call inside Method: projectLocator.toString()
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Method Call inside Method: tool.setActiveProject(null)
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Unique argument types: [null]
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Method Call inside Method: tool.getProjectManager()
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.379 TRACE logPackage.LogReader [main] - Method Call inside Method: pm.openProject(projectLocator, true, false)
2024-06-17 05:34:43.381 ERROR logPackage.LogReader [main] - Error resolving argument type for: projectLocator
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : ProjectLocator
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.getType(JavaParserParameterDeclaration.java:68) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$178(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:581) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.VariableDeclarator.accept(VariableDeclarator.java:151) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$176(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:575) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.VariableDeclarationExpr.accept(VariableDeclarationExpr.java:120) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:535) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.TryStmt.accept(TryStmt.java:143) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.381 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, boolean]
2024-06-17 05:34:43.382 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.382 TRACE logPackage.LogReader [main] - Method Call inside Method: tool.setActiveProject(activeProject)
2024-06-17 05:34:43.383 ERROR logPackage.LogReader [main] - Error resolving argument type for: activeProject
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : Project
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclaration.getType(JavaParserVariableDeclaration.java:59) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:535) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.TryStmt.accept(TryStmt.java:143) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved]
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Method Call inside Method: activeProject.getRepository()
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Method Call inside Method: repository.isConnected()
2024-06-17 05:34:43.384 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.385 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.385 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showInfo(GhidraRun.class, null, "Working Off-Line ", "Even though you are not connected to the Ghidra Server,\n" + "you can still work off-line on checked out files or private files.\n" + "You can also try reconnecting to the server by selecting the connect\n" + "button on the Ghidra Project Window.\n \n" + "See the Ghidra Help topic 'Project Repository' for troubleshooting\n" + "a failed connection.")
2024-06-17 05:34:43.385 TRACE logPackage.LogReader [main] - Unique argument types: [null, java.lang.Class<ghidra.GhidraRun>, java.lang.String]
2024-06-17 05:34:43.386 TRACE logPackage.LogReader [main] - Number of unique argument types: 3
2024-06-17 05:34:43.386 TRACE logPackage.LogReader [main] - Method Call: Msg.showError(GhidraRun.class, null, "Project Open Failed", "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage(), t)
2024-06-17 05:34:43.386 TRACE logPackage.LogReader [main] - Method Call: projectLocator.toString()
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: t.getClass().getSimpleName()
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: t.getClass()
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: t.getMessage()
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: Msg.showInfo(GhidraRun.class, null, "Project Open Failed", "Failed to " + (reopen ? "reopen last" : "open") + " project: " + projectLocator.toString() + "\n\n" + t.getClass().getSimpleName() + ": " + t.getMessage())
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: projectLocator.toString()
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: t.getClass().getSimpleName()
2024-06-17 05:34:43.387 TRACE logPackage.LogReader [main] - Method Call: t.getClass()
2024-06-17 05:34:43.388 TRACE logPackage.LogReader [main] - Method Call: t.getMessage()
2024-06-17 05:34:43.388 TRACE logPackage.LogReader [main] - Method Call: Msg.showInfo(GhidraRun.class, null, "Project is Locked", "Can't open project: " + projectLocator.toString() + "\nProject is already locked")
2024-06-17 05:34:43.388 TRACE logPackage.LogReader [main] - Method Call: projectLocator.toString()
2024-06-17 05:34:43.388 TRACE logPackage.LogReader [main] - Method Call: tool.setActiveProject(null)
2024-06-17 05:34:43.388 TRACE logPackage.LogReader [main] - Method Call: tool.getProjectManager()
2024-06-17 05:34:43.389 TRACE logPackage.LogReader [main] - Method Call: pm.openProject(projectLocator, true, false)
2024-06-17 05:34:43.389 TRACE logPackage.LogReader [main] - Method Call: tool.setActiveProject(activeProject)
2024-06-17 05:34:43.389 TRACE logPackage.LogReader [main] - Method Call: activeProject.getRepository()
2024-06-17 05:34:43.389 TRACE logPackage.LogReader [main] - Method Call: repository.isConnected()
2024-06-17 05:34:43.389 TRACE logPackage.LogReader [main] - Method Call: Msg.showInfo(GhidraRun.class, null, "Working Off-Line ", "Even though you are not connected to the Ghidra Server,\n" + "you can still work off-line on checked out files or private files.\n" + "You can also try reconnecting to the server by selecting the connect\n" + "button on the Ghidra Project Window.\n \n" + "See the Ghidra Help topic 'Project Repository' for troubleshooting\n" + "a failed connection.")
2024-06-17 05:34:43.396 TRACE logPackage.LogReader [main] - Method Call: Thread.currentThread().getThreadGroup()
2024-06-17 05:34:43.396 TRACE logPackage.LogReader [main] - Method Call: Thread.currentThread()
2024-06-17 05:34:43.396 INFO  logPackage.LogReader [main] - Method Declaration: void uncaughtException(Thread, Throwable)
2024-06-17 05:34:43.396 INFO  logPackage.LogReader [main] - Method Content: {
    handleUncaughtException(e);
}
2024-06-17 05:34:43.396 TRACE logPackage.LogReader [main] - Method Call inside Method: handleUncaughtException(e)
2024-06-17 05:34:43.397 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.Throwable]
2024-06-17 05:34:43.397 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.397 TRACE logPackage.LogReader [main] - Method Call: handleUncaughtException(e)
2024-06-17 05:34:43.397 INFO  logPackage.LogReader [main] - Method Declaration: void handleUncaughtException(Throwable)
2024-06-17 05:34:43.397 INFO  logPackage.LogReader [main] - Method Content: {
    if (t instanceof DomainObjectException) {
        t = t.getCause();
    }
    if (t instanceof TerminatedTransactionException) {
        Msg.showError(GhidraThreadGroup.class, null, "Terminated Transaction", "Transaction has been terminated!\n \n" + "All open transactions must be closed before a new transaction will be allowed.\n" + "Try cancelling all long running tasks.\n \n" + "Note that this error may be repeated until all running tasks are terminated.");
        return;
    }
    if (t instanceof DomainObjectLockedException) {
        Msg.showError(GhidraThreadGroup.class, null, "Transaction Not Allowed", t.getMessage() + "\n \n" + "No modifications are permitted until the locking process has completed.");
        return;
    }
    // pass up for more generic exception handling
    SwingExceptionHandler.handleUncaughtException(t);
}
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getCause()
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showError(GhidraThreadGroup.class, null, "Terminated Transaction", "Transaction has been terminated!\n \n" + "All open transactions must be closed before a new transaction will be allowed.\n" + "Try cancelling all long running tasks.\n \n" + "Note that this error may be repeated until all running tasks are terminated.")
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.Class<ghidra.GhidraThreadGroup>, null, java.lang.String]
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Number of unique argument types: 3
2024-06-17 05:34:43.398 TRACE logPackage.LogReader [main] - Method Call inside Method: Msg.showError(GhidraThreadGroup.class, null, "Transaction Not Allowed", t.getMessage() + "\n \n" + "No modifications are permitted until the locking process has completed.")
2024-06-17 05:34:43.403 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.Class<ghidra.GhidraThreadGroup>, null, java.lang.String]
2024-06-17 05:34:43.403 TRACE logPackage.LogReader [main] - Number of unique argument types: 3
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Method Call inside Method: t.getMessage()
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Method Call inside Method: SwingExceptionHandler.handleUncaughtException(t)
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.Throwable]
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Method Call: t.getCause()
2024-06-17 05:34:43.404 TRACE logPackage.LogReader [main] - Method Call: Msg.showError(GhidraThreadGroup.class, null, "Terminated Transaction", "Transaction has been terminated!\n \n" + "All open transactions must be closed before a new transaction will be allowed.\n" + "Try cancelling all long running tasks.\n \n" + "Note that this error may be repeated until all running tasks are terminated.")
2024-06-17 05:34:43.405 TRACE logPackage.LogReader [main] - Method Call: Msg.showError(GhidraThreadGroup.class, null, "Transaction Not Allowed", t.getMessage() + "\n \n" + "No modifications are permitted until the locking process has completed.")
2024-06-17 05:34:43.405 TRACE logPackage.LogReader [main] - Method Call: t.getMessage()
2024-06-17 05:34:43.405 TRACE logPackage.LogReader [main] - Method Call: SwingExceptionHandler.handleUncaughtException(t)
2024-06-17 05:34:43.413 INFO  logPackage.LogReader [main] - Method Declaration: void main(String[])
2024-06-17 05:34:43.414 INFO  logPackage.LogReader [main] - Method Content: {
    if (args.length == 0) {
        usage();
    }
    GhidraApplicationLayout layout = new GhidraJarApplicationLayout();
    if ("-gui".equals(args[0])) {
        new GhidraRun().launch(layout, removeArgs(args, 1));
    } else {
        new AnalyzeHeadless().launch(layout, args);
    }
}
2024-06-17 05:34:43.414 TRACE logPackage.LogReader [main] - Method Call inside Method: usage()
2024-06-17 05:34:43.414 TRACE logPackage.LogReader [main] - Unique argument types: []
2024-06-17 05:34:43.414 TRACE logPackage.LogReader [main] - Number of unique argument types: 0
2024-06-17 05:34:43.414 TRACE logPackage.LogReader [main] - Method Call inside Method: "-gui".equals(args[0])
2024-06-17 05:34:43.415 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.415 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.415 TRACE logPackage.LogReader [main] - Method Call inside Method: new AnalyzeHeadless().launch(layout, args)
2024-06-17 05:34:43.416 ERROR logPackage.LogReader [main] - Error resolving argument type for: layout
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : GhidraApplicationLayout
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclaration.getType(JavaParserVariableDeclaration.java:59) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$88(VoidVisitorAdapter.java:300) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.Optional.ifPresent(Optional.java:178) [?:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:300) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.417 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, java.lang.String[]]
2024-06-17 05:34:43.417 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.417 TRACE logPackage.LogReader [main] - Method Call inside Method: new GhidraRun().launch(layout, removeArgs(args, 1))
2024-06-17 05:34:43.418 ERROR logPackage.LogReader [main] - Error resolving argument type for: layout
com.github.javaparser.resolution.UnsolvedSymbolException: Unsolved symbol : GhidraApplicationLayout
	at com.github.javaparser.ast.type.ClassOrInterfaceType.convertToUsage(ClassOrInterfaceType.java:347) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convertToUsage(JavaParserFacade.java:607) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:639) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.convert(JavaParserFacade.java:635) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclaration.getType(JavaParserVariableDeclaration.java:59) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.model.Value.from(Value.java:45) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.resolution.Context.solveSymbolAsValueInParentContext(Context.java:199) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.solveSymbolAsValue(MethodCallExprContext.java:145) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:76) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.resolution.SymbolSolver.solveSymbolAsValue(SymbolSolver.java:82) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:334) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.TypeExtractor.visit(TypeExtractor.java:64) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.NameExpr.accept(NameExpr.java:81) ~[javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeConcrete(JavaParserFacade.java:501) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:349) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getType(JavaParserFacade.java:331) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.symbolsolver.JavaSymbolSolver.calculateType(JavaSymbolSolver.java:403) ~[javaparser-symbol-solver-core-3.25.8.jar:?]
	at com.github.javaparser.ast.expr.Expression.calculateResolvedType(Expression.java:575) ~[javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.resolveArgumentType(LogReader.java:140) [classes/:?]
	at logPackage.LogReader$StatementVisitor.lambda$0(LogReader.java:119) [classes/:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:117) [classes/:?]
	at logPackage.LogReader$StatementVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.expr.MethodCallExpr.accept(MethodCallExpr.java:124) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:260) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.ExpressionStmt.accept(ExpressionStmt.java:79) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:301) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.IfStmt.accept(IfStmt.java:90) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$19(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:109) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.stmt.BlockStmt.accept(BlockStmt.java:78) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:102) [classes/:?]
	at logPackage.LogReader$MethodContentVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:75) [classes/:?]
	at logPackage.LogReader$LogVisitor.visit(LogReader.java:1) [classes/:?]
	at com.github.javaparser.ast.body.MethodDeclaration.accept(MethodDeclaration.java:106) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$32(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:155) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.accept(ClassOrInterfaceDeclaration.java:103) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.lambda$visit$44(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) [?:?]
	at com.github.javaparser.ast.NodeList.forEach(NodeList.java:288) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.visitor.VoidVisitorAdapter.visit(VoidVisitorAdapter.java:176) [javaparser-core-3.25.8.jar:?]
	at com.github.javaparser.ast.CompilationUnit.accept(CompilationUnit.java:132) [javaparser-core-3.25.8.jar:?]
	at logPackage.LogReader.parseFile(LogReader.java:58) [classes/:?]
	at logPackage.LogReader.main(LogReader.java:43) [classes/:?]
	at logPackage.MainApplication.main(MainApplication.java:7) [classes/:?]
2024-06-17 05:34:43.419 TRACE logPackage.LogReader [main] - Unique argument types: [Unresolved, MethodCall]
2024-06-17 05:34:43.419 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.419 TRACE logPackage.LogReader [main] - Method Call inside Method: removeArgs(args, 1)
2024-06-17 05:34:43.419 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String[], int]
2024-06-17 05:34:43.419 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.420 TRACE logPackage.LogReader [main] - Method Call: usage()
2024-06-17 05:34:43.420 TRACE logPackage.LogReader [main] - Method Call: "-gui".equals(args[0])
2024-06-17 05:34:43.420 TRACE logPackage.LogReader [main] - Method Call: new AnalyzeHeadless().launch(layout, args)
2024-06-17 05:34:43.420 TRACE logPackage.LogReader [main] - Method Call: new GhidraRun().launch(layout, removeArgs(args, 1))
2024-06-17 05:34:43.420 TRACE logPackage.LogReader [main] - Method Call: removeArgs(args, 1)
2024-06-17 05:34:43.421 INFO  logPackage.LogReader [main] - Method Declaration: String[] removeArgs(String[], int)
2024-06-17 05:34:43.421 INFO  logPackage.LogReader [main] - Method Content: {
    String[] newArgs = new String[Math.max(0, args.length - removalCount)];
    if (newArgs.length != 0) {
        System.arraycopy(args, removalCount, newArgs, 0, newArgs.length);
    }
    return newArgs;
}
2024-06-17 05:34:43.421 TRACE logPackage.LogReader [main] - Method Call inside Method: Math.max(0, args.length - removalCount)
2024-06-17 05:34:43.423 TRACE logPackage.LogReader [main] - Unique argument types: [int]
2024-06-17 05:34:43.424 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.424 TRACE logPackage.LogReader [main] - Method Call inside Method: System.arraycopy(args, removalCount, newArgs, 0, newArgs.length)
2024-06-17 05:34:43.426 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String[], int]
2024-06-17 05:34:43.426 TRACE logPackage.LogReader [main] - Number of unique argument types: 2
2024-06-17 05:34:43.426 TRACE logPackage.LogReader [main] - Method Call: Math.max(0, args.length - removalCount)
2024-06-17 05:34:43.427 TRACE logPackage.LogReader [main] - Method Call: System.arraycopy(args, removalCount, newArgs, 0, newArgs.length)
2024-06-17 05:34:43.427 INFO  logPackage.LogReader [main] - Method Declaration: void usage()
2024-06-17 05:34:43.427 INFO  logPackage.LogReader [main] - Method Content: {
    System.out.println("Ghidra GUI Usage:  java -jar <ghidra.jar> -gui [<ghidra-project-file>]");
    AnalyzeHeadless.usage("java -jar <ghidra.jar>");
    System.exit(1);
}
2024-06-17 05:34:43.427 TRACE logPackage.LogReader [main] - Method Call inside Method: System.out.println("Ghidra GUI Usage:  java -jar <ghidra.jar> -gui [<ghidra-project-file>]")
2024-06-17 05:34:43.427 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.427 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.427 TRACE logPackage.LogReader [main] - Method Call inside Method: AnalyzeHeadless.usage("java -jar <ghidra.jar>")
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Unique argument types: [java.lang.String]
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Method Call inside Method: System.exit(1)
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Unique argument types: [int]
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Number of unique argument types: 1
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Method Call: System.out.println("Ghidra GUI Usage:  java -jar <ghidra.jar> -gui [<ghidra-project-file>]")
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Method Call: AnalyzeHeadless.usage("java -jar <ghidra.jar>")
2024-06-17 05:34:43.428 TRACE logPackage.LogReader [main] - Method Call: System.exit(1)
